Metadata-Version: 2.2
Name: expert-palm-tree
Version: 0.1.0
Summary: Synthesizes custom feeds for BlueSky based on keywords or other search terms
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: alembic>=1.14.0
Requires-Dist: bcrypt>=4.2.1
Requires-Dist: fastapi>=0.115.6
Requires-Dist: psycopg2-binary>=2.9.10
Requires-Dist: pydantic[email]>=2.10.5
Requires-Dist: pydantic-settings>=2.7.1
Requires-Dist: python-dotenv>=1.0.1
Requires-Dist: sqlalchemy>=2.0.37
Requires-Dist: uvicorn>=0.34.0
Requires-Dist: websockets>=14.1
Requires-Dist: pyjwt>=2.10.1
Requires-Dist: python-multipart>=0.0.20

# expert-palm-tree

A custom feed generator for Bluesky that allows users to create personalized feeds based on keywords and topics.

## Setup

1. Create a .env file with your configuration. 
```
DATABASE_URL=postgresql://user:password@localhost/bluesky_feed
BATCH_SIZE=250
FLUSH_INTERVAL_SECONDS=5
```

2. Initialize the database:
```bash
uv run alembic upgrade head
```

3. Run the services:

Database:
```bash
docker-compose up -d
```

Ingestion service:
```bash
uv run python -m ingestion.main
```

Feed service:
```bash
uv run uvicorn feed_service.main:app --reload
```

## Architecture

```mermaid
flowchart LR
    JS[Bluesky Firehose\nJetstream] --> Ingest[Ingestion Service\nFastAPI]
    Ingest --> PostDB[(Post Database\nTimescaleDB)]
    Ingest --> Cache[(Redis Cache)]
    
    PostDB --> API[API Service\nFastAPI]
    Cache --> API
    
    API --> WebApp[Vue Frontend]
    
    UserDB[(User Database\nPostgres)] --> API
    
    subgraph "User Interaction"
        WebApp --> Auth[Authentication]
        WebApp --> Keywords[Keyword Management]
        WebApp --> Feed[Custom Feed View]
    end
```


## References

[AT Protocol Summary](https://en.wikipedia.org/wiki/AT_Protocol)
[Jetstream](https://github.com/bluesky-social/jetstream) - simplified version of the Bluesky Firehose that this service uses.
